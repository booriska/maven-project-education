package task3;

/*

 Создать косольное приложение: великий и могущественный оракул,
 который отвечает на вопрос исходя из ряда правил
 Если вопрос сликом длинный, говорит будь лаконичней
 слишком короткий будь красноречивее
 проверяет на наличие вопроса что, где, когда, и тд...
 если их больше одного, ты задаешь слишком много вопросов
 если ни одного, то не еслышу вопроса в твоих речах
 на каждый из этих вопросов, если он один дается заготовленный мудрый ответ
 оракул может рандомно нахамить или стукнуть палкой
 может устать и сделать перерыв на 10 сек до минуты,
 сообщая тебе сколько еще ждать в ответ на вопросы.

 создать отчет о вопросах ответах виде Josn фаила используя
 Jackson Object mapper и положить его в ресурсы

*/


public class Main {
    public static void main(String[] args) {
        GreatOracle greatOracle = new GreatOracle();
            greatOracle.start();
    }

    /*
    Код, в целом работает, но есть несколько нерешенных неточностей, которые запарывают логику.
    Например, если у вопросительного слова ("как", "когда" и т.д.) стоит знак препинания,
    то слово не определяется и оракулу кажется, что вопрос не задан.

    Поток, который отвечает за ответы на вопросы завершается, если ввести 0. После этого завершаются
    остальные потоки, после чего формируется json.

    Помимо этого не совсем понимаю, что значит "положить json в ресурсы". Это папка resources,
    которая лежит в target?

    И еще один очень важный момент, и я так и не понял как его реализовать. Когда оракул спит,
    идет обратный отсчет, но другие потоки все равно работают. То есть пока он спит, он может и
    нахамить, и палкой ударить, и на вопрос ответить. Как сделать так, чтобы другие потоки в этот
    момент ничего не делали?

    Ну и с тестами есть вопрос. У меня большинство методов void и результатом их работы является
    System.out.println. И как их тестировать неясно. Думаю, что можно сделать так, чтобы эти
    методы возвращали String и тогда их можно сравнить assertEquals.
     */

}
